#!/usr/bin/env ruby
require "bundler/setup"
$LOAD_PATH.unshift File.expand_path("../../lib", __FILE__)

require 'ffi-rzmq'

class PipelineRpcServer

  attr_reader :context, :socket

  def initialize
    @context = ZMQ::Context.new(1)
    @socket = context.socket(ZMQ::REP)
    socket.bind("tcp://*:5555")
  end

  def run
    require "pipeline"
    Pipeline.load_config(File.expand_path('../../config/pipeline.yml', __FILE__))

    loop do
      request = ''
      socket.recv_string(request)
      puts "Received request. Data: #{request.inspect}"
      if request.start_with? "build-analyzer_"
        _, arg = request.split("_")
        result = Pipeline.build_analyzer(arg)
        socket.send_string(result.to_json)
      elsif request.start_with? "release-analyzer_"
        _, arg = request.split("_")
        result = Pipeline.release(arg)
        socket.send_string(result.to_json)
      else
        socket.send_string("done")
      end
    end
    puts msg
    socket.send_string(msg)
  end

end

PipelineRpcServer.new.run
